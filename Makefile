# -------- Project metadata --------
TARGET      := PuffQuestAdvance
GAME_TITLE  := PUFFQUESTADV
GAME_CODE   := PQA1
MAKER_CODE  := 01
REVISION    := 0

# -------- Source / include / assets --------
SRC_DIRS    := src
INC_DIRS    := include
# Butano JSON assets live under graphics/ and audio/ (created by tools/fetch_assets.py)
DATA_DIRS   := graphics audio

# -------- Find Butano automatically --------
# Try both common layouts:
#   third_party/butano/butano/butano.mk   (recommended by docs)
#   third_party/butano/butano.mk          (some older layouts)
CANDIDATES  := \
  $(CURDIR)/third_party/butano/butano \
  $(CURDIR)/third_party/butano

# First candidate containing butano.mk wins
LIBBUTANO   := $(firstword $(foreach p,$(CANDIDATES),$(if $(wildcard $(p)/butano.mk),$(p),)))

ifeq ($(strip $(LIBBUTANO)),)
  $(error Could not find butano.mk. Expected in one of: $(CANDIDATES))
endif

# -------- Bring in Butano build system --------
include $(LIBBUTANO)/butano.mk

# -------- Butano config overrides (optional) --------
# Enable default system libs if you later use stdlib features:
# DEFAULTLIBS := true

# Increase limits or tweak engine at compile time:
# USERFLAGS += -DBN_CFG_AUDIO_MIXING_RATE=BN_AUDIO_MIXING_RATE_21_KHZ

# -------- Project files --------
# Collect C++ sources
SOURCES := $(foreach d,$(SRC_DIRS),$(wildcard $(d)/*.cpp))
INCLUDES := $(foreach d,$(INC_DIRS),-I$(d))

# Asset description files (generated by tools/fetch_assets.py)
# They are discovered automatically by Butano rules via DATA_DIRS,
# but we also expose them here to make "make clean" behave nicely.
DATA_FILES := $(foreach d,$(DATA_DIRS),$(wildcard $(d)/*.json))

# -------- ROM header --------
ROM_TITLE   := $(GAME_TITLE)
ROM_CODE    := $(GAME_CODE)
MAKER_CODE  := $(MAKER_CODE)
REVISION    := $(REVISION)

# -------- Tell Butano where things are --------
# (Butano reads these variables)
BN_PROJECT_NAME := $(TARGET)
BN_SOURCES      := $(SOURCES)
BN_INCLUDES     := $(INCLUDES)
BN_DATA_DIRS    := $(DATA_DIRS)

# Convenience targets
.PHONY: all clean
all: $(TARGET).gba

clean:
	$(MAKE) -f $(LIBBUTANO)/butano.mk clean
